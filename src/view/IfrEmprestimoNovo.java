/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import dao.EmprestimoDAO;
import dao.EmprestimoExemplarDAO;
import dao.ExemplarDAO;
import dao.FuncionarioDAO;
import dao.LivroDAO;
import dao.PerfilDAO;
import dao.UsuarioDAO;
import entities.Emprestimo;
import entities.EmprestimoExemplar;
import entities.Exemplar;
import entities.Perfil;
import entities.Usuario;
import java.awt.Color;
import java.awt.Frame;
import java.awt.Window;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import reports.ReportsGenerator;
import utils.Data;
import utils.Validacao;

/**
 *
 * @author Gustavo Martini
 */
public class IfrEmprestimoNovo extends javax.swing.JInternalFrame {

    int id = 0;
    int cod_usuario = 0;
    int cod_exemplar = 0;
    int limiteDeLivros = 0;
    boolean apto = true;
    ArrayList<Exemplar> exemplares = new ArrayList<>();
    ArrayList<Emprestimo> emprestimos = new ArrayList<>();

    int cod_funcionario = new FuncionarioDAO().getFuncionarioLogado().getId();
    UsuarioDAO usuarioDAO = new UsuarioDAO();
    LivroDAO livroDAO = new LivroDAO();
    PerfilDAO perfilDAO = new PerfilDAO();
    EmprestimoDAO emprestimoDAO = new EmprestimoDAO();
    EmprestimoExemplarDAO emprestimoExemplarDAO = new EmprestimoExemplarDAO();
    Usuario usuario;

    DefaultTableModel dtmExemplares = new DefaultTableModel();
    DefaultTableModel dtmEmprestimos = new DefaultTableModel();

    /**
     * Creates new form IfrEmprestimo
     */
    public IfrEmprestimoNovo() {
        initComponents();
        setTitle("Novo Empréstimo");
        setClosable(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblExemplares = new javax.swing.JTable();
        btnExemplarAdd = new javax.swing.JButton();
        btnExemplarRemover = new javax.swing.JButton();
        lblCodExemplar = new javax.swing.JLabel();
        lblInfos = new javax.swing.JLabel();
        lblNome = new javax.swing.JLabel();
        lblLimite = new javax.swing.JLabel();
        lblPrazo = new javax.swing.JLabel();
        lblUsuarioNome = new javax.swing.JLabel();
        lblUsuarioLimite = new javax.swing.JLabel();
        lblUsuarioPrazo = new javax.swing.JLabel();
        lblSituacao = new javax.swing.JLabel();
        lblUsuarioSituacao = new javax.swing.JLabel();
        btnCancelar = new javax.swing.JButton();
        btnCriarEmprestimo = new javax.swing.JButton();
        btnBuscarUsuario = new javax.swing.JButton();
        btnNovo = new javax.swing.JButton();
        lblApto = new javax.swing.JLabel();
        lblUsuarioApto = new javax.swing.JLabel();
        lblRenovacoes = new javax.swing.JLabel();
        lblUsuarioRenovacoes = new javax.swing.JLabel();
        txfCodExemplar = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        lblQtdeLivros = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        ftfDataRetirada = new javax.swing.JFormattedTextField();
        ftfDataDevolucao = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();

        tblExemplares.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cód.", "Titulo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblExemplares.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblExemplares);
        if (tblExemplares.getColumnModel().getColumnCount() > 0) {
            tblExemplares.getColumnModel().getColumn(0).setMinWidth(70);
            tblExemplares.getColumnModel().getColumn(0).setPreferredWidth(70);
            tblExemplares.getColumnModel().getColumn(0).setMaxWidth(70);
        }

        btnExemplarAdd.setIcon(new javax.swing.ImageIcon("/home/gustavo/NetBeansProjects/Biblioteca/icons/plus.png")); // NOI18N
        btnExemplarAdd.setText("Adicionar exemplar");
        btnExemplarAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExemplarAddActionPerformed(evt);
            }
        });

        btnExemplarRemover.setIcon(new javax.swing.ImageIcon("/home/gustavo/NetBeansProjects/Biblioteca/icons/delete.png")); // NOI18N
        btnExemplarRemover.setText("Remover exemplar");
        btnExemplarRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExemplarRemoverActionPerformed(evt);
            }
        });

        lblCodExemplar.setText("Exemplar:");

        lblInfos.setFont(new java.awt.Font("Cantarell", 1, 16)); // NOI18N
        lblInfos.setText("Informações do usuário");

        lblNome.setText("Nome:");

        lblLimite.setText("Limite de livros:");

        lblPrazo.setText("Prazo para devolução:");

        lblUsuarioNome.setText("   ");

        lblUsuarioLimite.setText("   ");

        lblUsuarioPrazo.setText("   ");

        lblSituacao.setText("Situação:");

        lblUsuarioSituacao.setText("   ");

        btnCancelar.setIcon(new javax.swing.ImageIcon("/home/gustavo/NetBeansProjects/Biblioteca/icons/close.png")); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnCriarEmprestimo.setIcon(new javax.swing.ImageIcon("/home/gustavo/NetBeansProjects/Biblioteca/icons/floppy-disk.png")); // NOI18N
        btnCriarEmprestimo.setText("Criar Empréstimo");
        btnCriarEmprestimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCriarEmprestimoActionPerformed(evt);
            }
        });

        btnBuscarUsuario.setIcon(new javax.swing.ImageIcon("/home/gustavo/NetBeansProjects/Biblioteca/icons/loupe.png")); // NOI18N
        btnBuscarUsuario.setText("Buscar Usuário");
        btnBuscarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarUsuarioActionPerformed(evt);
            }
        });

        btnNovo.setIcon(new javax.swing.ImageIcon("/home/gustavo/NetBeansProjects/Biblioteca/icons/new.png")); // NOI18N
        btnNovo.setText("Novo");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        lblApto.setText("Apto:");

        lblUsuarioApto.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        lblUsuarioApto.setText("   ");

        lblRenovacoes.setText("Renovações:");

        lblUsuarioRenovacoes.setText("   ");

        jLabel1.setText("Qtde de livros adicionados:");

        lblQtdeLivros.setText("0");

        jLabel2.setText("Exemplares:");

        jLabel3.setText("Data retirada:");

        try {
            ftfDataRetirada.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            ftfDataDevolucao.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel4.setText("Data devolução:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(60, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 618, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(216, 216, 216)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblPrazo)
                                    .addComponent(lblLimite)
                                    .addComponent(lblRenovacoes))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblUsuarioLimite, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblUsuarioPrazo, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblUsuarioRenovacoes, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnNovo)
                                .addGap(18, 18, 18)
                                .addComponent(btnCriarEmprestimo)
                                .addGap(18, 18, 18)
                                .addComponent(btnCancelar))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblQtdeLivros, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel4))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(ftfDataDevolucao)
                                            .addComponent(ftfDataRetirada))))
                                .addGap(18, 18, Short.MAX_VALUE)
                                .addComponent(lblCodExemplar)
                                .addGap(18, 18, 18)
                                .addComponent(txfCodExemplar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnExemplarAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnExemplarRemover, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnBuscarUsuario)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblInfos)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblNome)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblUsuarioNome, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblSituacao)
                            .addComponent(lblApto))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblUsuarioSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblUsuarioApto, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(60, 60, 60))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblInfos)
                    .addComponent(btnBuscarUsuario))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNome)
                    .addComponent(lblUsuarioNome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLimite)
                    .addComponent(lblUsuarioLimite))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPrazo)
                    .addComponent(lblUsuarioPrazo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRenovacoes)
                    .addComponent(lblUsuarioRenovacoes))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSituacao)
                    .addComponent(lblUsuarioSituacao))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblApto)
                    .addComponent(lblUsuarioApto))
                .addGap(30, 30, 30)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExemplarAdd)
                    .addComponent(lblCodExemplar)
                    .addComponent(txfCodExemplar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(lblQtdeLivros))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExemplarRemover)
                    .addComponent(jLabel3)
                    .addComponent(ftfDataRetirada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(ftfDataDevolucao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar)
                    .addComponent(btnCriarEmprestimo)
                    .addComponent(btnNovo))
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void atualizarDTM() {

        dtmExemplares = (DefaultTableModel) tblExemplares.getModel();
        dtmExemplares.setRowCount(0);

        for (Exemplar exemplar : exemplares) {
            String titulo = livroDAO.consultarId(exemplar.getCod_livro()).getTitulo();
            dtmExemplares.addRow(new Object[]{exemplar.getId(), titulo});
        }

        lblQtdeLivros.setText(exemplares.size() + "");

    }

    private void clearTableRows() {
        exemplares.clear();
        atualizarDTM();
    }

    private void limparCadastro() {
        txfCodExemplar.setText("");
        ftfDataDevolucao.setText("");
        ftfDataRetirada.setText("");
        lblUsuarioNome.setText("");
        lblUsuarioLimite.setText("");
        lblUsuarioPrazo.setText("");
        lblUsuarioSituacao.setText("");
        lblUsuarioApto.setText("");
        lblUsuarioRenovacoes.setText("");
        lblUsuarioApto.setForeground(Color.black);

        clearTableRows();

        id = 0;
        cod_usuario = 0;
    }

    private void btnBuscarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarUsuarioActionPerformed
        Frame parentFrame = (Frame) SwingUtilities.getAncestorOfClass(Window.class, this);
        DlgBuscaUsuario dlgBuscaUsuario = new DlgBuscaUsuario(parentFrame, true);
        dlgBuscaUsuario.setVisible(true);
        
        try {
            apto = true;

            cod_usuario = dlgBuscaUsuario.cod_usuario;
            usuario = usuarioDAO.consultarId(cod_usuario);
            Perfil perfil = perfilDAO.consultarId(usuario.getCod_perfil());
            ArrayList<Emprestimo> emprestimos = new EmprestimoDAO().consultar(cod_usuario + "");
            limiteDeLivros = perfil.getLimite();

            lblUsuarioNome.setText(usuario.getNome() + " " + usuario.getSobrenome());
            lblUsuarioLimite.setText(perfil.getLimite() + "");
            lblUsuarioPrazo.setText(perfil.getPrazo() + "");
            lblUsuarioRenovacoes.setText(perfil.getQtde_renovacoes() + "");
            lblUsuarioSituacao.setText(usuario.getSituacao());

            for (Emprestimo emprestimo : emprestimos) {
                if (!emprestimo.isDevolvido()) {
                    apto = false;
                }
            }

            lblUsuarioApto.setText(apto ? "Sim" : "Pendente");
            lblUsuarioApto.setForeground(apto ? Color.BLACK : Color.red);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Problema ao buscar usuário!");
            System.out.println("Erro: " + e.toString());
        }

    }//GEN-LAST:event_btnBuscarUsuarioActionPerformed

    private void btnExemplarAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExemplarAddActionPerformed
        // atualizar tabela com id do autor
        try {
            if (cod_usuario == 0) {
                JOptionPane.showMessageDialog(null, "Insira o código do usuário antes de adicionar livros!");
                return;
            }

            if (txfCodExemplar.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Nenhum exemplar informado!");
                return;
            }

            cod_exemplar = Integer.parseInt(txfCodExemplar.getText());
            Exemplar exemplar = new ExemplarDAO().consultarId(cod_exemplar);
            boolean exemplarExiste = false;
            boolean exemplarDisponivel = exemplar.getCod_estado() == 1;

            for (Exemplar ex : exemplares) {
                if (ex.getId() == cod_exemplar) {
                    exemplarExiste = true;
                }
            }

            if (limiteDeLivros <= exemplares.size()) {
                JOptionPane.showMessageDialog(null, "Usuário já atingiu o limite de livros!");
                return;
            }

            if (!exemplarDisponivel) {
                JOptionPane.showMessageDialog(null, "O exemplar informado não está disponível!");
                return;
            }

            if (!exemplarExiste && exemplarDisponivel) {
                exemplares.add(exemplar);
                atualizarDTM();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Exemplar não existe!");
            System.out.println("Erro: " + e.toString());
        }


    }//GEN-LAST:event_btnExemplarAddActionPerformed

    private void btnExemplarRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExemplarRemoverActionPerformed
        if (tblExemplares.getSelectedRowCount() == 1) {
            try {
                EmprestimoExemplarDAO emprestimoExemplarDAO = new EmprestimoExemplarDAO();
                int selectedRow = tblExemplares.getSelectedRow();

                String idString = String.valueOf(tblExemplares.getValueAt(selectedRow, 0));

                cod_exemplar = Integer.parseInt(idString);

                Iterator<Exemplar> exemplarIterator = exemplares.iterator();
                while (exemplarIterator.hasNext()) {
                    Exemplar exemplar = exemplarIterator.next();

                    if (exemplar.getId() == cod_exemplar) {
                        exemplarIterator.remove();
                    }
                }

//                if (id != 0) {
//                    // remover da tabela livro_autor
//                    emprestimoExemplarDAO.excluir(id, cod_exemplar);
//                }
                atualizarDTM();
            } catch (Exception e) {
                System.out.println("Erro ao remover exemplar de Empréstimo: " + e);
            }
        } else {
            if (tblExemplares.getRowCount() == 0) {
                JOptionPane.showMessageDialog(null, "Tabela está vazia.");
            } else {
                JOptionPane.showMessageDialog(null, "Nenhum exemplar selecionado.");
            }
        }
    }//GEN-LAST:event_btnExemplarRemoverActionPerformed

    private void btnCriarEmprestimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCriarEmprestimoActionPerformed
        try {
            String retorno = "";

            if (exemplares.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Não é possível criar um novo empréstimo sem exemplares!");
                return;
            }

            String data_retirada = ftfDataRetirada.getText().equals("  /  /    ")
                    ? Data.dateToString(Data.dataAtual()) : ftfDataRetirada.getText();

            String data_devolucao = ftfDataDevolucao.getText().equals("  /  /    ")
                    ? "" : ftfDataDevolucao.getText();

            System.out.println("CHECK 1");
            Validacao val = new Validacao();

            boolean datasValidas = true;

            if (!data_devolucao.isEmpty()) {
                datasValidas = val.validarDataFormatada(data_devolucao)
                        && val.validarDataFormatada(data_retirada);
            }

            if (!datasValidas) {
                if (!ftfDataRetirada.getText().equals("  /  /    ")) {
                    JOptionPane.showMessageDialog(null, "Digite uma data de retirada válida!");
                    return;
                }

                if (!ftfDataDevolucao.getText().equals("  /  /    ")) {
                    JOptionPane.showMessageDialog(null, "Digite uma data de devolução válida!");
                    return;
                }
            }

            if (data_retirada.isEmpty() && !data_devolucao.isEmpty()) {
                JOptionPane.showMessageDialog(null, "A data devolução deve ser maior que a data de retirada!"
                        + "\n"
                        + "A data de retirada em branco será preenchida com a data atual.");
                return;
            }

            Emprestimo emprestimo = new Emprestimo();
            emprestimo.setCod_func(cod_funcionario);
            emprestimo.setCod_usuario(cod_usuario);
            emprestimo.setData_retirada(data_retirada);
            emprestimo.setData_devolucao(data_devolucao);
            emprestimo.setRenovacoes(0);
            emprestimo.setDevolvido(false);

            if (apto) {
                retorno = emprestimoDAO.salvar(emprestimo);
            } else {
                JOptionPane.showMessageDialog(null, "O usuário deve resolver pendências antes de realizar novo empréstimo!");
                return;
            }

            if (retorno == null) {
                int returnID = emprestimoDAO.returnId;

                for (Exemplar exemplar : exemplares) {
                    retorno = emprestimoExemplarDAO.salvar(new EmprestimoExemplar(returnID, exemplar.getId()));

                    exemplar.setCod_estado(2);
                    new ExemplarDAO().atualizar(exemplar);
                }
            }

            if (retorno == null) {
                JOptionPane.showMessageDialog(null, "Empréstimo criado com sucesso!");

                limparCadastro();
                
                Map params = new HashMap();
                params.put("pCodEmprestimo", emprestimoDAO.returnId);
                new ReportsGenerator().gerarRelatorioRobusto("/reports/report_novo_emprestimo.jrxml", params);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Problema ao criar empréstimo!");
            System.out.println("Erro: " + e.toString());
        }
    }//GEN-LAST:event_btnCriarEmprestimoActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        limparCadastro();
    }//GEN-LAST:event_btnNovoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarUsuario;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnCriarEmprestimo;
    private javax.swing.JButton btnExemplarAdd;
    private javax.swing.JButton btnExemplarRemover;
    private javax.swing.JButton btnNovo;
    private javax.swing.JFormattedTextField ftfDataDevolucao;
    private javax.swing.JFormattedTextField ftfDataRetirada;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblApto;
    private javax.swing.JLabel lblCodExemplar;
    private javax.swing.JLabel lblInfos;
    private javax.swing.JLabel lblLimite;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblPrazo;
    private javax.swing.JLabel lblQtdeLivros;
    private javax.swing.JLabel lblRenovacoes;
    private javax.swing.JLabel lblSituacao;
    private javax.swing.JLabel lblUsuarioApto;
    private javax.swing.JLabel lblUsuarioLimite;
    private javax.swing.JLabel lblUsuarioNome;
    private javax.swing.JLabel lblUsuarioPrazo;
    private javax.swing.JLabel lblUsuarioRenovacoes;
    private javax.swing.JLabel lblUsuarioSituacao;
    private javax.swing.JTable tblExemplares;
    private javax.swing.JTextField txfCodExemplar;
    // End of variables declaration//GEN-END:variables
}
