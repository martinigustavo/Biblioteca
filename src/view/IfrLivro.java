/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import dao.AutorDAO;
import dao.CombosDAO;
import dao.EditoraDAO;
import dao.ExemplarDAO;
import dao.GeneroDAO;
import dao.LivroAutorDAO;
import dao.LivroDAO;
import dao.LivroGeneroDAO;
import entities.Autor;
import entities.Editora;
import entities.Exemplar;
import entities.Genero;
import entities.Livro;
import entities.LivroAutor;
import entities.LivroGenero;
import java.awt.Color;
import java.awt.Frame;
import java.awt.Window;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import utils.ComboItem;
import utils.Validacao;

/**
 *
 * @author gustavo
 */
public class IfrLivro extends javax.swing.JInternalFrame {

    int id = 0;
    int linha = 0;
    int idAutor = 0;
    int idGenero = 0;
    int idEditora = 0;
    Livro livro;
    LivroDAO livroDAO = new LivroDAO();

    ArrayList<Autor> autores = new ArrayList<>();
    ArrayList<Genero> generos = new ArrayList<>();
    ArrayList<Exemplar> exemplares = new ArrayList<>();

    DefaultTableModel dtmAutor = new DefaultTableModel();
    DefaultTableModel dtmGenero = new DefaultTableModel();

    /**
     * Creates new form IfrLivro
     */
    public IfrLivro() {
        initComponents();
        setTitle("Livro");
        setClosable(true);

        livroDAO.popularTabela(tblLivro, txfBusca.getText(), "titulo");
        btnProcurarEditora.getText();
        new CombosDAO().popularCombo("tipolivro", "cod_tipolivro", "tipo", cbxTipoLivro, "");
        hglTblAutor.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tbpLivro = new javax.swing.JTabbedPane();
        pnlCadastro = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        lblEdicao = new javax.swing.JLabel();
        ftfEdicao = new javax.swing.JFormattedTextField();
        lblVolume = new javax.swing.JLabel();
        ftfVolume = new javax.swing.JFormattedTextField();
        lblExemplares = new javax.swing.JLabel();
        lblTipo = new javax.swing.JLabel();
        cbxTipoLivro = new javax.swing.JComboBox<>();
        lblEditora = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAutor = new javax.swing.JTable();
        btnAddAutor = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblGenero = new javax.swing.JTable();
        btnAddGenero = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        hglNome = new javax.swing.JLabel();
        hglNome1 = new javax.swing.JLabel();
        hglNome2 = new javax.swing.JLabel();
        hglNome3 = new javax.swing.JLabel();
        hglNome4 = new javax.swing.JLabel();
        hglNome5 = new javax.swing.JLabel();
        hglNome6 = new javax.swing.JLabel();
        hglNome7 = new javax.swing.JLabel();
        hglTblAutor = new javax.swing.JLabel();
        btnRemoverGenero = new javax.swing.JButton();
        btnRemoverAutor = new javax.swing.JButton();
        btnProcurarEditora = new javax.swing.JButton();
        txfTitulo = new javax.swing.JTextField();
        ftfExemplares = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        txfISBN = new javax.swing.JTextField();
        lblAno = new javax.swing.JLabel();
        ftfAno = new javax.swing.JFormattedTextField();
        jSeparator1 = new javax.swing.JSeparator();
        cbxTipo = new javax.swing.JComboBox<>();
        txfBusca = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane(tblLivro, JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED, JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
        tblLivro = new javax.swing.JTable();
        txfEditora = new javax.swing.JTextField();
        btnExcluir = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnGerenciarExemplares = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        btnNovo = new javax.swing.JButton();

        lblTitulo.setText("Título:");

        lblEdicao.setText("Edição:");

        ftfEdicao.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        ftfEdicao.setToolTipText("Informe o número de edição do livro");

        lblVolume.setText("Volume:");

        ftfVolume.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        ftfVolume.setToolTipText("Informe o volume do livro");

        lblExemplares.setText("Exemplares:");

        lblTipo.setText("Tipo:");

        cbxTipoLivro.setToolTipText("Informe a editora do livro");
        cbxTipoLivro.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxTipoLivroItemStateChanged(evt);
            }
        });

        lblEditora.setText("Editora:");

        tblAutor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Autor(es)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblAutor.setToolTipText("Adicione pelo menos um autor");
        tblAutor.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblAutor);
        if (tblAutor.getColumnModel().getColumnCount() > 0) {
            tblAutor.getColumnModel().getColumn(0).setMinWidth(70);
            tblAutor.getColumnModel().getColumn(0).setPreferredWidth(70);
            tblAutor.getColumnModel().getColumn(0).setMaxWidth(70);
        }

        btnAddAutor.setIcon(new javax.swing.ImageIcon("/home/gustavo/NetBeansProjects/Biblioteca/icons/plus.png")); // NOI18N
        btnAddAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddAutorActionPerformed(evt);
            }
        });

        tblGenero.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Gênero(s)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblGenero.setToolTipText("Adicione um ou mais gêneros ao livro");
        tblGenero.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tblGenero);
        if (tblGenero.getColumnModel().getColumnCount() > 0) {
            tblGenero.getColumnModel().getColumn(0).setMinWidth(70);
            tblGenero.getColumnModel().getColumn(0).setPreferredWidth(70);
            tblGenero.getColumnModel().getColumn(0).setMaxWidth(70);
        }

        btnAddGenero.setIcon(new javax.swing.ImageIcon("/home/gustavo/NetBeansProjects/Biblioteca/icons/plus.png")); // NOI18N
        btnAddGenero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddGeneroActionPerformed(evt);
            }
        });

        jLabel2.setText("* Campo obrigatório");

        hglNome.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        hglNome.setForeground(new java.awt.Color(255, 0, 51));
        hglNome.setText("*");

        hglNome1.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        hglNome1.setForeground(new java.awt.Color(255, 0, 51));
        hglNome1.setText("*");

        hglNome2.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        hglNome2.setForeground(new java.awt.Color(255, 0, 51));
        hglNome2.setText("*");

        hglNome3.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        hglNome3.setForeground(new java.awt.Color(255, 0, 51));
        hglNome3.setText("*");

        hglNome4.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        hglNome4.setForeground(new java.awt.Color(255, 0, 51));
        hglNome4.setText("*");

        hglNome5.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        hglNome5.setForeground(new java.awt.Color(255, 0, 51));
        hglNome5.setText("*");

        hglNome6.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        hglNome6.setForeground(new java.awt.Color(255, 0, 51));
        hglNome6.setText("*");

        hglNome7.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        hglNome7.setForeground(new java.awt.Color(255, 0, 51));
        hglNome7.setText("*");

        hglTblAutor.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        hglTblAutor.setForeground(new java.awt.Color(255, 0, 51));
        hglTblAutor.setText("*");

        btnRemoverGenero.setIcon(new javax.swing.ImageIcon("/home/gustavo/NetBeansProjects/Biblioteca/icons/delete.png")); // NOI18N
        btnRemoverGenero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverGeneroActionPerformed(evt);
            }
        });

        btnRemoverAutor.setIcon(new javax.swing.ImageIcon("/home/gustavo/NetBeansProjects/Biblioteca/icons/delete.png")); // NOI18N
        btnRemoverAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverAutorActionPerformed(evt);
            }
        });

        btnProcurarEditora.setIcon(new javax.swing.ImageIcon("/home/gustavo/NetBeansProjects/Biblioteca/icons/loupe.png")); // NOI18N
        btnProcurarEditora.setToolTipText("Selecionar editora");
        btnProcurarEditora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcurarEditoraActionPerformed(evt);
            }
        });

        txfTitulo.setToolTipText("Informe o título do livro");

        jLabel1.setText("ISBN:");

        txfISBN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txfISBNMouseClicked(evt);
            }
        });

        lblAno.setText("Ano:");

        ftfAno.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        ftfAno.setToolTipText("Informe o número de edição do livro");

        cbxTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Título", "Ano" }));

        btnBuscar.setIcon(new javax.swing.ImageIcon("/home/gustavo/NetBeansProjects/Biblioteca/icons/loupe.png")); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        tblLivro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cód.", "ISBN", "Título", "Ano", "Autor(es)", "Edição", "Volume", "Num. Ex.", "Editora", "Gênero(s)", "Tipo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblLivro.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblLivro.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(tblLivro);
        if (tblLivro.getColumnModel().getColumnCount() > 0) {
            tblLivro.getColumnModel().getColumn(0).setMinWidth(50);
            tblLivro.getColumnModel().getColumn(0).setPreferredWidth(50);
            tblLivro.getColumnModel().getColumn(0).setMaxWidth(50);
        }

        txfEditora.setEnabled(false);

        javax.swing.GroupLayout pnlCadastroLayout = new javax.swing.GroupLayout(pnlCadastro);
        pnlCadastro.setLayout(pnlCadastroLayout);
        pnlCadastroLayout.setHorizontalGroup(
            pnlCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCadastroLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(pnlCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCadastroLayout.createSequentialGroup()
                        .addGroup(pnlCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblEditora)
                            .addComponent(jLabel1)
                            .addComponent(lblEdicao))
                        .addGroup(pnlCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlCadastroLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(pnlCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(pnlCadastroLayout.createSequentialGroup()
                                        .addComponent(btnAddAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnRemoverAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(pnlCadastroLayout.createSequentialGroup()
                                        .addComponent(txfEditora, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnProcurarEditora, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(ftfEdicao)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCadastroLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(txfISBN, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(pnlCadastroLayout.createSequentialGroup()
                                    .addComponent(hglNome5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblTipo))
                                .addGroup(pnlCadastroLayout.createSequentialGroup()
                                    .addComponent(hglNome)
                                    .addGap(76, 76, 76)
                                    .addComponent(lblTitulo))
                                .addGroup(pnlCadastroLayout.createSequentialGroup()
                                    .addComponent(hglNome3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblVolume)))
                            .addComponent(hglTblAutor))
                        .addGap(18, 18, 18)
                        .addGroup(pnlCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlCadastroLayout.createSequentialGroup()
                                .addGroup(pnlCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(ftfVolume, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbxTipoLivro, 0, 325, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(hglNome6)
                                    .addComponent(hglNome7))
                                .addGap(48, 48, 48)
                                .addGroup(pnlCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCadastroLayout.createSequentialGroup()
                                        .addGroup(pnlCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblExemplares, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lblAno, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addGap(18, 18, 18)
                                        .addGroup(pnlCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(pnlCadastroLayout.createSequentialGroup()
                                                .addComponent(ftfAno, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(hglNome1))
                                            .addGroup(pnlCadastroLayout.createSequentialGroup()
                                                .addComponent(ftfExemplares, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(hglNome4))))))
                            .addGroup(pnlCadastroLayout.createSequentialGroup()
                                .addComponent(txfTitulo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(hglNome2))
                            .addGroup(pnlCadastroLayout.createSequentialGroup()
                                .addGroup(pnlCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(pnlCadastroLayout.createSequentialGroup()
                                        .addComponent(btnAddGenero, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnRemoverGenero, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(70, 70, 70))
                    .addGroup(pnlCadastroLayout.createSequentialGroup()
                        .addGroup(pnlCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlCadastroLayout.createSequentialGroup()
                                .addComponent(cbxTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txfBusca)
                                .addGap(18, 18, 18)
                                .addComponent(btnBuscar))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1341, Short.MAX_VALUE)
                            .addComponent(jSeparator1))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        pnlCadastroLayout.setVerticalGroup(
            pnlCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCadastroLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(pnlCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hglNome)
                    .addComponent(hglNome2)
                    .addComponent(lblTitulo)
                    .addComponent(txfTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(txfISBN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCadastroLayout.createSequentialGroup()
                        .addGroup(pnlCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlCadastroLayout.createSequentialGroup()
                                .addGroup(pnlCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(hglNome3)
                                    .addComponent(lblEdicao)
                                    .addComponent(ftfEdicao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblVolume)
                                    .addComponent(ftfVolume, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(pnlCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblEditora)
                                        .addComponent(txfEditora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(pnlCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(hglNome5)
                                        .addComponent(lblTipo))
                                    .addComponent(btnProcurarEditora, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbxTipoLivro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(pnlCadastroLayout.createSequentialGroup()
                                .addGroup(pnlCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlCadastroLayout.createSequentialGroup()
                                        .addComponent(hglNome6)
                                        .addGap(40, 40, 40))
                                    .addGroup(pnlCadastroLayout.createSequentialGroup()
                                        .addGap(40, 40, 40)
                                        .addComponent(hglNome7)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(pnlCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hglTblAutor)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnRemoverAutor)
                                .addComponent(btnAddAutor))
                            .addGroup(pnlCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2)
                                .addComponent(btnRemoverGenero))
                            .addComponent(btnAddGenero, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(pnlCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txfBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBuscar)
                            .addComponent(cbxTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlCadastroLayout.createSequentialGroup()
                        .addGroup(pnlCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAno)
                            .addComponent(ftfAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hglNome1))
                        .addGap(18, 18, 18)
                        .addGroup(pnlCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblExemplares)
                            .addComponent(ftfExemplares, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hglNome4))))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        tbpLivro.addTab("Cadastro", pnlCadastro);

        btnExcluir.setIcon(new javax.swing.ImageIcon("/home/gustavo/NetBeansProjects/Biblioteca/icons/delete.png")); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnEditar.setIcon(new javax.swing.ImageIcon("/home/gustavo/NetBeansProjects/Biblioteca/icons/edit.png")); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnGerenciarExemplares.setIcon(new javax.swing.ImageIcon("/home/gustavo/NetBeansProjects/Biblioteca/icons/manage.png")); // NOI18N
        btnGerenciarExemplares.setText("Gerenciar exemplares");
        btnGerenciarExemplares.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGerenciarExemplaresActionPerformed(evt);
            }
        });

        btnSalvar.setIcon(new javax.swing.ImageIcon("/home/gustavo/NetBeansProjects/Biblioteca/icons/floppy-disk.png")); // NOI18N
        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnNovo.setIcon(new javax.swing.ImageIcon("/home/gustavo/NetBeansProjects/Biblioteca/icons/new.png")); // NOI18N
        btnNovo.setText("Novo");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tbpLivro, javax.swing.GroupLayout.PREFERRED_SIZE, 1461, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnGerenciarExemplares)
                .addGap(18, 18, 18)
                .addComponent(btnNovo)
                .addGap(18, 18, 18)
                .addComponent(btnSalvar)
                .addGap(18, 18, 18)
                .addComponent(btnEditar)
                .addGap(18, 18, 18)
                .addComponent(btnExcluir)
                .addGap(60, 60, 60))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tbpLivro, javax.swing.GroupLayout.PREFERRED_SIZE, 709, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExcluir)
                    .addComponent(btnEditar)
                    .addComponent(btnGerenciarExemplares)
                    .addComponent(btnSalvar)
                    .addComponent(btnNovo))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void atualizarDTM(String tbl) {
        if (tbl.equals("autor")) {
            dtmAutor = (DefaultTableModel) tblAutor.getModel();
            dtmAutor.setRowCount(0);

            for (Autor autor : autores) {
                dtmAutor.addRow(new Object[]{autor.getId(), autor.getNome() + " " + autor.getSobrenome()});
            }
        }

        if (tbl.equals("genero")) {
            dtmGenero = (DefaultTableModel) tblGenero.getModel();
            dtmGenero.setRowCount(0);

            for (Genero genero : generos) {
                dtmGenero.addRow(new Object[]{genero.getId(), genero.getGenero()});
            }
        }
    }

    private void clearTableRows() {
        autores.clear();
        generos.clear();
        atualizarDTM("autor");
        atualizarDTM("genero");
    }

    private void limparCadastro() {
        txfISBN.setText("");
        txfTitulo.setText("");
        ftfEdicao.setText("");
        ftfVolume.setText("");
        ftfExemplares.setText("");
        txfEditora.setText("");
        ftfAno.setText("");
        cbxTipoLivro.setSelectedIndex(0);

        clearTableRows();

        id = 0;

        tbpLivro.setSelectedIndex(0);

        txfISBN.requestFocus();
    }

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        limparCadastro();
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        String retorno = "";

        String isbn = txfISBN.getText().trim().replace("-", "");
        String titulo = txfTitulo.getText().trim();
        String ano = ftfAno.getText().trim();
        String edicao = ftfEdicao.getText().trim();
        String volume = ftfVolume.getText().trim();
        String numDeExemplares = ftfExemplares.getText().trim();
        int numDeExemplaresInt = numDeExemplares.isEmpty() ? 1 : Integer.parseInt(numDeExemplares);
        String editora = txfEditora.getText();
        ComboItem ciTipo = (ComboItem) cbxTipoLivro.getSelectedItem();
        int cod_tipolivro = ciTipo.getCodigo();

        // VALIDAÇÃO DE CAMPOS EM BRANCO
        if (isbn.isEmpty()
                || titulo.isEmpty()
                || ano.isEmpty()
                || edicao.isEmpty()
                || volume.isEmpty()
                || numDeExemplares.isEmpty()
                || editora.isEmpty()) {
            pnlCadastro.setVisible(true);
            tbpLivro.setSelectedIndex(0);
            JOptionPane.showMessageDialog(null, "Preencha os campos obrigatórios!");
            return;
        }

        Validacao validar = new Validacao();

        // VALIDAÇÃO DE CAMPOS INVÁLIDOS
        if (validar.validarISBN(isbn) == false) {

            txfISBN.setForeground(Color.red);
            JOptionPane.showMessageDialog(null, "Digite um ISBN válido!");
            txfISBN.requestFocus();

            return;
        }

        // VALIDAÇÃO DE LIVRO JÁ CADASTRADO
        if (livroDAO.livroExiste(isbn, id)) {
            txfISBN.setForeground(Color.red);
            JOptionPane.showMessageDialog(null, "O número ISBN informado já está cadastrado no sistema!");
            txfISBN.requestFocus();
            return;
        }

        // VALIDAÇÂO COMBOS NÃO SELECIONADOS
        if (cbxTipoLivro.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Selecione um tipo para o livro!");
            return;
        }

        // VALIDAÇAO TABELA AUTOR VAZIA SE TIPO LIVRO ESTIVER SELECIONADO
        if (hglTblAutor.isVisible() && autores.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Selecione pelo menos um autor para o livro!");
            return;
        }

        // VALIDAR NUM DE EXEMPLARES NA EDICAO
        if (id != 0 && numDeExemplaresInt < livro.getNumDeExemplares()) {
            JOptionPane.showMessageDialog(null, "O número de exemplares não pode ser menor que o cadastrado!");
            return;
        }
        
        int diferencaExemplares = id == 0 ? numDeExemplaresInt : numDeExemplaresInt - livro.getNumDeExemplares();
        
        //Integer id, String isbn, String titulo, String ano, String edicao, String volume, Integer numDeExemplares, Integer cod_tipolivro, Integer cod_editora
        livro = new Livro(id, isbn, titulo, ano, edicao, volume,
                numDeExemplaresInt, cod_tipolivro, idEditora);

        if (id != 0) {
            retorno = livroDAO.atualizar(livro);
        } else {
            retorno = livroDAO.salvar(livro);
        }

        int novoId = id == 0 ? livroDAO.returnId : id;

        //RETORNAR O ID DO LIVRO PRA CRIAR LIVROAUTOR E LIVROGENERO
        //Salvar autores na tabela livro_autor
        LivroAutorDAO livroAutorDAO = new LivroAutorDAO();
        LivroAutor livroAutor = new LivroAutor();
        livroAutor.setCod_livro(novoId);
        if (retorno == null) {
            for (Autor autor : autores) {

                livroAutor.setCod_autor(autor.getId());

                if (!livroAutorDAO.livroAutorExiste(novoId, autor.getId())) {
                    livroAutorDAO.salvar(livroAutor);
                }

            }
        }

        //Salvar generos na tabela livro_genero
        LivroGeneroDAO livroGeneroDAO = new LivroGeneroDAO();
        LivroGenero livroGenero = new LivroGenero();
        livroGenero.setCod_livro(novoId);
        if (retorno == null) {
            for (Genero genero : generos) {

                livroGenero.setCod_genero(genero.getId());

                if (!livroGeneroDAO.livroGeneroExiste(novoId, genero.getId())) {
                    livroGeneroDAO.salvar(livroGenero);
                }

            }
        }

//        CRIAR EXEMPLARES PARA O NUMERO DE EXEMPLARES INFORMADO
        if (id != 0) {
            System.out.println("DIFERENCA EXEMPLARES: " + diferencaExemplares);
            if (retorno == null) {
                Exemplar exemplar = null;
                for (int i = 0; i < diferencaExemplares; i++) {
                    exemplar = new Exemplar(0, novoId, 1);
                    new ExemplarDAO().salvar(exemplar);
                }
            }
        } else {
            if (retorno == null) {
                Exemplar exemplar = null;
                for (int i = 0; i < numDeExemplaresInt; i++) {
                    exemplar = new Exemplar(0, novoId, 1);
                    new ExemplarDAO().salvar(exemplar);
                }
            }
        }

        // APÓS SALVAR/ATUALIZAR, LIMPA OS CAMPOS DO CADASTRO
        if (retorno == null) {
            JOptionPane.showMessageDialog(null, "Livro salvo com sucesso!");

            limparCadastro();

            livroDAO.popularTabela(tblLivro, txfBusca.getText(), "titulo");
        } else {
            JOptionPane.showMessageDialog(null, "Problemas ao salvar livro!\n\n"
                    + "Mensagem técnica:\n"
                    + "Erro: " + retorno);
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        try {
            String idString = String.valueOf(tblLivro.getValueAt(tblLivro.getSelectedRow(), 0));

            id = Integer.parseInt(idString);

            livro = livroDAO.consultarId(id);

            txfISBN.setText(livro.getIsbn());
            txfTitulo.setText(livro.getTitulo());
            ftfAno.setText(livro.getAno());
            ftfEdicao.setText(livro.getEdicao());
            ftfVolume.setText(livro.getVolume());
            ftfExemplares.setText(livro.getNumDeExemplares().toString());
            idEditora = livro.getCod_editora();
            txfEditora.setText(new EditoraDAO().consultarId(idEditora).getNome());

            ComboItem ciTipoLivro = new ComboItem();
            ciTipoLivro.setCodigo(livro.getCod_tipolivro());
            new CombosDAO().definirItemCombo(cbxTipoLivro, ciTipoLivro);

            autores = new LivroAutorDAO().consultar(id);
            generos = new LivroGeneroDAO().consultar(id);
            exemplares = new ExemplarDAO().consultar(id);
            atualizarDTM("autor");
            atualizarDTM("genero");

            txfISBN.requestFocus();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Nenhum livro selecionado.");
            System.out.println("Erro: " + e.toString());
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnGerenciarExemplaresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGerenciarExemplaresActionPerformed
        try {
            String idString = String.valueOf(tblLivro.getValueAt(tblLivro.getSelectedRow(), 0));
            int idLivro = Integer.parseInt(idString);

            Frame parentFrame = (Frame) SwingUtilities.getAncestorOfClass(Window.class, this);
            DlgGerenciarExemplares dlgGerenciarExemplares = new DlgGerenciarExemplares(parentFrame, true, idLivro);
            dlgGerenciarExemplares.setVisible(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Nenhum livro selecionado.");
            System.out.println("Erro: " + e.toString());
        }
    }//GEN-LAST:event_btnGerenciarExemplaresActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        if (cbxTipo.getSelectedIndex() == 0) {
            livroDAO.popularTabela(tblLivro, txfBusca.getText(), "titulo");
        } else if (cbxTipo.getSelectedIndex() == 1) {
            livroDAO.popularTabela(tblLivro, txfBusca.getText(), "ano");
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void txfISBNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txfISBNMouseClicked
        txfISBN.setForeground(Color.black);
    }//GEN-LAST:event_txfISBNMouseClicked

    private void btnRemoverAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverAutorActionPerformed
        if (tblAutor.getSelectedRowCount() == 1) {
            try {
                LivroAutorDAO livroAutorDAO = new LivroAutorDAO();
                int selectedRow = tblAutor.getSelectedRow();

                String idString = String.valueOf(tblAutor.getValueAt(selectedRow, 0));

                idAutor = Integer.parseInt(idString);

                Iterator<Autor> autorIterator = autores.iterator();
                while (autorIterator.hasNext()) {
                    Autor autor = autorIterator.next();

                    if (autor.getId() == idAutor) {
                        autorIterator.remove();
                    }
                }

                if (id != 0) {
                    // remover da tabela livro_autor
                    livroAutorDAO.excluir(id, idAutor);
                }

                atualizarDTM("autor");
            } catch (Exception e) {
                System.out.println("Erro ao remover livro_autor: " + e);
            }
        } else {
            if (tblAutor.getRowCount() == 0) {
                JOptionPane.showMessageDialog(null, "Tabela está vazia.");
            } else {
                JOptionPane.showMessageDialog(null, "Nenhum autor selecionado.");
            }
        }
    }//GEN-LAST:event_btnRemoverAutorActionPerformed

    private void btnRemoverGeneroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverGeneroActionPerformed
        if (tblGenero.getSelectedRowCount() == 1) {
            try {
                LivroGeneroDAO livroGeneroDAO = new LivroGeneroDAO();
                int selectedRow = tblGenero.getSelectedRow();

                String idString = String.valueOf(tblGenero.getValueAt(selectedRow, 0));

                idGenero = Integer.parseInt(idString);

                Iterator<Genero> generoIterator = generos.iterator();
                while (generoIterator.hasNext()) {
                    Genero genero = generoIterator.next();

                    if (genero.getId() == idGenero) {
                        generoIterator.remove();
                    }
                }

                if (id != 0) {
                    // remover da tabela livro_autor
                    livroGeneroDAO.excluir(id, idGenero);
                }

                atualizarDTM("genero");
            } catch (Exception e) {
                System.out.println("Erro ao remover livro_genero: " + e);
            }
        } else {
            if (tblGenero.getRowCount() == 0) {
                JOptionPane.showMessageDialog(null, "Tabela está vazia.");
            } else {
                JOptionPane.showMessageDialog(null, "Nenhum gênero selecionado.");
            }
        }
    }//GEN-LAST:event_btnRemoverGeneroActionPerformed

    private void btnAddGeneroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddGeneroActionPerformed
        Frame parentFrame = (Frame) SwingUtilities.getAncestorOfClass(Window.class, this);
        DlgBuscaGenero dlgBuscaGenero = new DlgBuscaGenero(parentFrame, true);
        dlgBuscaGenero.setVisible(true);

        // atualizar tabela com id do Genero
        idGenero = dlgBuscaGenero.idGenero;
        Genero genero = new GeneroDAO().consultarId(dlgBuscaGenero.idGenero);
        boolean generoExiste = false;

        for (Genero gen : generos) {
            if (gen.getId() == idGenero) {
                generoExiste = true;
            }
        }

        if (!generoExiste && idGenero != 0) {
            generos.add(genero);
            atualizarDTM("genero");
        }
    }//GEN-LAST:event_btnAddGeneroActionPerformed

    private void btnAddAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddAutorActionPerformed
        Frame parentFrame = (Frame) SwingUtilities.getAncestorOfClass(Window.class, this);
        DlgBuscaAutor dlgBuscaAutor = new DlgBuscaAutor(parentFrame, true);
        dlgBuscaAutor.setVisible(true);

        // atualizar tabela com id do autor
        idAutor = dlgBuscaAutor.idAutor;
        Autor autor = new AutorDAO().consultarId(dlgBuscaAutor.idAutor);
        boolean autorExiste = false;
        for (Autor aut : autores) {
            if (aut.getId() == idAutor) {
                autorExiste = true;
            }
        }

        if (!autorExiste && idAutor != 0) {
            autores.add(autor);
            atualizarDTM("autor");
        }
    }//GEN-LAST:event_btnAddAutorActionPerformed

    private void cbxTipoLivroItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxTipoLivroItemStateChanged
        if (cbxTipoLivro.getSelectedIndex() == 1) {
            hglTblAutor.setVisible(true);
        } else {
            hglTblAutor.setVisible(false);
        }
    }//GEN-LAST:event_cbxTipoLivroItemStateChanged

    private void btnProcurarEditoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcurarEditoraActionPerformed
        Frame parentFrame = (Frame) SwingUtilities.getAncestorOfClass(Window.class, this);
        DlgBuscaEditora dlgBuscaEditora = new DlgBuscaEditora(parentFrame, true);
        dlgBuscaEditora.setVisible(true);

        try {
            idEditora = dlgBuscaEditora.idEditora;
            Editora editora = new EditoraDAO().consultarId(idEditora);
            txfEditora.setText(editora.getNome());
        } catch (Exception e) {
            System.out.println("Erro: " + e.toString());
        }
    }//GEN-LAST:event_btnProcurarEditoraActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddAutor;
    private javax.swing.JButton btnAddGenero;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnGerenciarExemplares;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnProcurarEditora;
    private javax.swing.JButton btnRemoverAutor;
    private javax.swing.JButton btnRemoverGenero;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox<String> cbxTipo;
    private javax.swing.JComboBox<String> cbxTipoLivro;
    private javax.swing.JFormattedTextField ftfAno;
    private javax.swing.JFormattedTextField ftfEdicao;
    private javax.swing.JFormattedTextField ftfExemplares;
    private javax.swing.JFormattedTextField ftfVolume;
    private javax.swing.JLabel hglNome;
    private javax.swing.JLabel hglNome1;
    private javax.swing.JLabel hglNome2;
    private javax.swing.JLabel hglNome3;
    private javax.swing.JLabel hglNome4;
    private javax.swing.JLabel hglNome5;
    private javax.swing.JLabel hglNome6;
    private javax.swing.JLabel hglNome7;
    private javax.swing.JLabel hglTblAutor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblAno;
    private javax.swing.JLabel lblEdicao;
    private javax.swing.JLabel lblEditora;
    private javax.swing.JLabel lblExemplares;
    private javax.swing.JLabel lblTipo;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JLabel lblVolume;
    private javax.swing.JPanel pnlCadastro;
    private javax.swing.JTable tblAutor;
    private javax.swing.JTable tblGenero;
    private javax.swing.JTable tblLivro;
    private javax.swing.JTabbedPane tbpLivro;
    private javax.swing.JTextField txfBusca;
    private javax.swing.JTextField txfEditora;
    private javax.swing.JTextField txfISBN;
    private javax.swing.JTextField txfTitulo;
    // End of variables declaration//GEN-END:variables
}
